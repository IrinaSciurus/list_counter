{"version":3,"sources":["CountList.jsx","Controller.jsx","App.js","index.js"],"names":["CountList","props","count","item","updateCount","reset","deleteRow","value","className","type","onClick","Controller","addCounter","resetAll","deleteAll","inputHandler","onChange","disabled","length","App","useState","setCount","setValue","event","updateValue","Number","target","val","updateCounter","filter","el","i","map","index","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAiBeA,MAdf,SAAmBC,GAAQ,IACjBC,EAAsDD,EAAtDC,MAAOC,EAA+CF,EAA/CE,KAAMC,EAAyCH,EAAzCG,YAAaC,EAA4BJ,EAA5BI,MAAOC,EAAqBL,EAArBK,UAAWC,EAAUN,EAAVM,MAEpD,OACE,yBAAKC,UAAU,mBACb,4BAAQC,KAAK,SAASD,UAAU,MAAME,QAAS,kBAAMN,EAAYD,GAAQI,KAAzE,IAAoFA,GACpF,8BAAOL,GACP,4BAAQO,KAAK,SAASD,UAAU,MAAME,QAAS,kBAAMN,EAAYD,EAAMI,KAAvE,IAAiFA,GACjF,4BAAQE,KAAK,SAASD,UAAU,MAAME,QAAS,kBAAML,EAAMF,KAA3D,SACA,4BAAQM,KAAK,SAASD,UAAU,MAAME,QAAS,kBAAMJ,EAAUH,KAA/D,YCISQ,MAdf,SAAoBV,GAAQ,IACnBC,EAAgED,EAAhEC,MAAOU,EAAyDX,EAAzDW,WAAYC,EAA6CZ,EAA7CY,SAAUC,EAAmCb,EAAnCa,UAAWC,EAAwBd,EAAxBc,aAAcR,EAAUN,EAAVM,MAG9D,OACC,6BACC,2BAAOE,KAAK,OAAOO,SAAUD,EAAcR,MAAOA,IAClD,6BACA,4BAAQE,KAAK,SAASD,UAAU,MAAME,QAASE,EAAYK,SAAUf,EAAMgB,OAAS,GAApF,eACA,4BAAQT,KAAK,SAASD,UAAU,MAAME,QAASG,GAA/C,aACA,4BAAQJ,KAAK,SAASD,UAAU,MAAME,QAASI,GAA/C,gBC8DYK,MApEf,WAAgB,IAAD,EACaC,mBAAS,CAAC,IADvB,mBACNlB,EADM,KACCmB,EADD,OAEaD,mBAAS,GAFtB,mBAENb,EAFM,KAECe,EAFD,KAIPP,EAAe,SAACQ,EAAOC,GAC3BF,EAASG,OAAOF,EAAMG,OAAOnB,SASzBH,EAAc,SAACD,EAAMwB,GACzB,IAAMC,EAAa,YAAO1B,GAC1B0B,EAAczB,IAASwB,EACvBN,EAASO,IAGLvB,EAAQ,SAACF,GACb,IAAMyB,EAAa,YAAO1B,GAC1B0B,EAAczB,GAAQ,EACtBkB,EAASO,IAGLtB,EAAY,SAACH,GACjBkB,EAASnB,EAAM2B,QAAO,SAACC,EAAIC,GAAL,OAAWA,IAAM5B,OAWzC,OACE,6BACE,2CACA,6DACA,kBAAC,EAAD,CACES,WAjCa,WACjBS,EAAS,GAAD,mBAAKnB,GAAL,CAAY,MAiChBW,SAdW,WACfQ,EAASnB,EAAM8B,KAAI,SAAAF,GAAE,OAAI,OAcrBhB,UAXY,WAChBO,EAAS,CAAC,KAWNnB,MAAOA,EACPa,aAAcA,EACdR,MAAOA,EACPe,SAAUA,IAGXpB,EAAM8B,KAAI,SAACF,EAAIG,GAAL,OAAe,kBAAC,EAAD,CACxB/B,MAAO4B,EACPvB,MAAOA,EACP2B,IAAKD,EACL9B,KAAM8B,EACN7B,YAAaA,EACbC,MAAOA,EACPC,UAAWA,EACXS,aAAcA,SC5DtBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ba375177.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction CountList(props) {\n  const { count, item, updateCount, reset, deleteRow, value } = props;\n\n  return (\n    <div className=\"list-group-item\">\n      <button type=\"button\" className=\"btn\" onClick={() => updateCount(item, -(value))}>-{value}</button>\n      <span>{count}</span>\n      <button type=\"button\" className=\"btn\" onClick={() => updateCount(item, value)}>+{value}</button>\n      <button type=\"button\" className=\"btn\" onClick={() => reset(item)}>Reset</button>\n      <button type=\"button\" className=\"btn\" onClick={() => deleteRow(item)}>Delete</button>\n    </div >\n  );\n}\n\nexport default CountList;\n","import React from 'react';\r\n\r\nfunction Controller(props) {\r\n\tconst { count, addCounter, resetAll, deleteAll, inputHandler, value } = props;\r\n\t// <InputBox value={step} updateSteps={(e) => this.updateSteps(e)} />\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input type=\"text\" onChange={inputHandler} value={value} />\r\n\t\t\t<br />\r\n\t\t\t<button type=\"button\" className=\"btn\" onClick={addCounter} disabled={count.length > 9}>Add Counter</button>\r\n\t\t\t<button type=\"button\" className=\"btn\" onClick={resetAll}>Reset all</button>\r\n\t\t\t<button type=\"button\" className=\"btn\" onClick={deleteAll}>Delete all</button>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Controller;","import React, { useState } from 'react';\nimport CountList from './CountList';\nimport Controller from './Controller';\n\nimport './App.css';\n\nfunction App() {\n  const [count, setCount] = useState([0]);\n  const [value, setValue] = useState(0);\n\n  const inputHandler = (event, updateValue) => {\n    setValue(Number(event.target.value))\n  }\n\n\n\n  const addCounter = () => {\n    setCount([...count, 0])\n  };\n\n  const updateCount = (item, val) => {\n    const updateCounter = [...count];\n    updateCounter[item] += val;\n    setCount(updateCounter);\n  };\n\n  const reset = (item) => {\n    const updateCounter = [...count];\n    updateCounter[item] = 0;\n    setCount(updateCounter);\n  };\n\n  const deleteRow = (item) => {\n    setCount(count.filter((el, i) => i !== item));\n  };\n\n  const resetAll = () => {\n    setCount(count.map(el => 0));\n  };\n\n  const deleteAll = () => {\n    setCount([0]);\n  };\n\n  return (\n    <div>\n      <h3>AddCounters</h3>\n      <h6>You can add only 10 counters!</h6>\n      <Controller\n        addCounter={addCounter}\n        resetAll={resetAll}\n        deleteAll={deleteAll}\n        count={count}\n        inputHandler={inputHandler}\n        value={value}\n        setValue={setValue}\n      />\n\n      {count.map((el, index) => <CountList\n        count={el}\n        value={value}\n        key={index}\n        item={index}\n        updateCount={updateCount}\n        reset={reset}\n        deleteRow={deleteRow}\n        inputHandler={inputHandler}\n      />\n      )\n      }\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}